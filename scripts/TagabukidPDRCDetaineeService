import com.rameses.annotations.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;


class TagabukidPDRCDetaineeService
{
	
	@ActiveDB(value='pdrc_detainees', em='tagabukid_pdrc')
	def em;

	@Env
	def env;

	@Service('DateService')
	def dtSvc 

	@Service("SequenceService")
	def seqSvc;

	@Service("PersistenceService")
    def persistenceSvc;

	@ProxyMethod
	def initCreate(){
		def entity = [:];

            entity.objid     = 'DNO' + new java.rmi.server.UID() +"-"+ dtSvc.getServerDate().year +"-N"
            entity.state     = "DRAFT"
            entity.recordlog = [:]
            entity.height    = 0
            entity.weight    = 0
            entity.detainee  = [:]

            entity.recordlog.datecreated         = dtSvc.serverDate
            entity.recordlog.createdbyuserid     = env.USERID
            entity.recordlog.createdbyuser       = env.FULLNAME
            entity.recordlog.dateoflastupdate    = dtSvc.serverDate
            entity.recordlog.lastupdatedbyuserid = env.USERID
            entity.recordlog.lastupdatedbyuser   = env.FULLNAME

            entity.cases          = []
            entity.arrest         = []
            entity.cell           = []
            // entity.counsel        = []
            entity.education      = []
            entity.economic       = []
            entity.social         = []
            entity.hearingdetails = []
            // entity.causeofdrop    = []
            entity.visitors   = []
      
        return entity;
	}

    @ProxyMethod
    public def getDetaineeNo(){
		def appcode = "DNO"
		def yr      = dtSvc.serverYear;
		def prefix  = appcode+yr;
		return prefix+seqSvc.getNextFormattedSeries(prefix);
  }

   @ProxyMethod 
    public def formatAddress( def x, def delimiter) {
    def txt1 = [x.unitno, x.bldgno, x.bldgname].findAll{ (it? true: false) }.join(" ").trim(); 
    def txt2 = [x.street, x.subdivision].findAll{ (it? true: false) }.join(" ").trim(); 
    def txt3 = [x.barangay?.name, x.city, x.barangay.parent.name, x.province].findAll{ (it? true: false) }.join(", ").trim(); 
    return [txt1, txt2, txt3].findAll{ (it? true: false) }.join( delimiter ).trim();
  }

}


